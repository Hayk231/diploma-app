{"version":3,"sources":["Helpers/components/customRadio.js","Helpers/components/ModalContainer/InfoContent.js","Helpers/components/ModalContainer/PassContent.js","Helpers/components/ModalContainer/CardContent.js","Helpers/components/ModalContainer/ReminderContent.js","Admin/Goals/GoalModal/GoalTextModal.js","Admin/Goals/GoalModal/GoalImageModal.js","Admin/Goals/GoalModal/GoalAddModal.js","Admin/Users/UserModal/UserAddModal.js","Helpers/components/ModalContainer/ModalContainer.js","../node_modules/@material-ui/icons/ExitToApp.js","Helpers/Utils.js","../node_modules/@material-ui/icons/Edit.js","Helpers/components/CustomButton.js","Helpers/components/customInput.js","User/Profile/Profile.js","Helpers/components/customSelect.js","redux/Admin/adminMiddlewares.js"],"names":["CustomRadio","options","Icon","label","name","changeFunction","className","map","option","index","id","value","type","defaultChecked","onChange","htmlFor","defaultMessage","text","defaultState","fullName","birthday","Date","toISOString","split","gender","country","InfoContent","useState","userState","setUserState","errorMessage","setErrorMessage","userData","useSelector","state","user","dispatch","useDispatch","useEffect","setData","data","toUpperCase","event","preventDefault","changedData","target","onSubmit","e","validateForm","updateUserData","getTime","AccountCircleOutlinedIcon","CalendarTodayOutlinedIcon","PublicIcon","countryList","CustomButton","password","oldPassword","PassContent","passState","setPassState","updateUserPassword","placeholder","LockOutlinedIcon","cardHolder","expire","cardNumber","cvv","CardContent","cardState","setCardState","CreditCardIcon","reminderOptions","ReminderContent","reminderType","setReminderType","style","textAlign","marginBottom","FormControl","fullWidth","margin","RadioGroup","el","FormControlLabel","control","Radio","radius","customWidth","GoalTextModal","goalData","setGoalData","changeData","goalId","organizationUserId","title","description","amount","parseFloat","updateGoalData","TitleIcon","DescriptionIcon","AttachMoneyIcon","GoalImageModal","secImageData","setSecImageData","thumbnailImageData","thumbImageData","setThumbImageData","customLoading","setCustomLoading","AuthStr","concat","getToken","axios","get","baseUrl","headers","Authorization","then","res","imagesData","triggerChange","uploadImage","isThumb","thumbImage","files","imageData","FormData","append","post","deleteImage","publicId","delete","filter","Loading","src","url","alt","onClick","accept","length","image","thumbnail","defaultGoalData","organization","GoalAddModal","newGoalData","setNewGoalData","organizations","setOrganizations","token","role","blocked","items","email","catch","error","response","status","outUser","addData","addGoal","ApartmentIcon","defaultData","conf_password","UserAddModal","setUserData","setRole","useHistory","dataFields","fields","WcOutlinedIcon","createFieldList","Select","roles","MenuItem","pushData","closeEditModal","message","toLowerCase","includes","MailOutlineIcon","ModalContainer","editData","openClass","setOpenClass","loading","modalRef","useRef","modalContentRef","setTimeout","content","goalTextEdit","goalAdd","goalImageEdit","userAdd","getComponentWIthData","info","pass","card","reminder","ref","stopPropagation","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","invalidName","key","toString","trim","passwordRegex","test","emailRegex","buildChartData","sortBy","defData","y","x","moment","date","format","defaultStyles","children","customHeight","customPadding","icon","borderRadius","width","height","padding","secClass","CustomInput","readOnly","suffixData","showPassword","setShowPassword","isWrong","inputProps","autoComplete","max","min","SuffixIcon","clickFunction","suffixContent","Profile","editModal","creditCards","openEditModal","disabled","CustomSelect","displayEmpty","getTableGoals","instructions","setLoading","setGoals","updateGoalActiveness","ids","active","put","params","paramsSerializer","qs","stringify","arrayFormat","updateUserActiveness","block","getTableUsers","setUsers","getTableDonations","setDonations"],"mappings":"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","file":"static/js/16.9d2e5edc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './cunstomInputs.scss';\r\n\r\nconst CustomRadio = ({options, Icon, label, name, changeFunction}) => {\r\n    return (\r\n        <div className='custom_radio'>\r\n            <div className='custom_radio_label'>\r\n                <Icon/>\r\n                {label}\r\n            </div>\r\n            <div className='custom_radio_items'>\r\n                {\r\n                    options.map((option, index) => (\r\n                        <div key={option.value}>\r\n                            <div className=\"md-radio\">\r\n                                <input id={option.value} type=\"radio\" value={option.value}\r\n                                       defaultChecked={index === 0} name={name} onChange={changeFunction}/>\r\n                                <label htmlFor={option.value}>{option.label}</label>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomRadio;","import React, {useEffect, useState} from 'react';\r\nimport CustomInput from \"../customInput\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport CustomSelect from \"../customSelect\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport {validateForm} from \"../../Utils\";\r\nimport {updateUserData} from \"../../../redux/User/userMiddlewares\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {countryList} from \"../../Constants\";\r\n\r\nconst defaultMessage = {name: '', text: ''};\r\n\r\nconst defaultState = {\r\n    fullName: '',\r\n    birthday: new Date().toISOString().split('T')[0],\r\n    gender: 'MALE',\r\n    country: 'Armenia',\r\n}\r\n\r\nconst InfoContent = () => {\r\n\r\n    const [userState, setUserState] = useState(defaultState);\r\n    const [errorMessage, setErrorMessage] = useState(defaultMessage);\r\n\r\n    const {userData} = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (userData.id) {\r\n            let setData = {\r\n                fullName: userData.data.fullName,\r\n                birthday: new Date(userData.data.birthday).toISOString().split('T')[0],\r\n                country: userData.data.country,\r\n                gender: userData.data.gender.toUpperCase(),\r\n            }\r\n            setUserState(setData)\r\n        }\r\n    }, [userData])\r\n\r\n    const changeFunction = (event) => {\r\n        event.preventDefault();\r\n\r\n        let changedData = {...userState};\r\n        let value = event.target.value;\r\n        if (event.target.name === 'birthday' && new Date(value) > new Date()) {\r\n            value = new Date().toISOString().split('T')[0]\r\n        }\r\n        changedData[event.target.name] = value;\r\n        setUserState(changedData)\r\n    }\r\n\r\n    const setProfileData = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(userState).name) {\r\n            setErrorMessage(validateForm(userState));\r\n        } else {\r\n            setErrorMessage(defaultMessage);\r\n            dispatch(updateUserData({...userState, birthday: new Date(userState.birthday).getTime()}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Edit Profile</h2>\r\n            <form onSubmit={setProfileData}>\r\n                <CustomInput type='text' label='Full name' Icon={AccountCircleOutlinedIcon}\r\n                             value={userState.fullName}\r\n                             changeFunction={changeFunction} name='fullName' errorMessage={errorMessage}/>\r\n                <label>\r\n                    <CustomInput type='date' label='Birthdate' Icon={CalendarTodayOutlinedIcon}\r\n                                 value={userState.birthday} changeFunction={changeFunction} name='birthday'\r\n                                 errorMessage={errorMessage}/>\r\n                </label>\r\n                <CustomSelect label='Country' Icon={PublicIcon} options={countryList}\r\n                              value={userState.country} changeFunction={changeFunction} name='country'/>\r\n                <div className='modal_button'>\r\n                    <CustomButton type='submit'>Save Changes</CustomButton>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InfoContent;","import React, {useState} from 'react';\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport CustomInput from \"../customInput\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {validateForm} from \"../../Utils\";\r\nimport {updateUserPassword} from \"../../../redux/User/userMiddlewares\";\r\n\r\nconst defaultMessage = {name: '', text: ''};\r\n\r\nconst defaultState = {\r\n    password: '',\r\n    oldPassword: '',\r\n}\r\n\r\nconst PassContent = () => {\r\n\r\n    const [passState, setPassState] = useState(defaultState);\r\n    const [errorMessage, setErrorMessage] = useState(defaultMessage);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeFunction = (event) => {\r\n        event.preventDefault();\r\n\r\n        let changedData = {...passState};\r\n        changedData[event.target.name] = event.target.value;\r\n        setPassState(changedData)\r\n    }\r\n\r\n    const setProfileData = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(passState).name) {\r\n            setErrorMessage(validateForm(passState));\r\n        } else {\r\n            setErrorMessage(defaultMessage);\r\n            dispatch(updateUserPassword(passState))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Change Password</h2>\r\n            <form onSubmit={setProfileData}>\r\n                <CustomInput type='password' placeholder='Old password' Icon={LockOutlinedIcon}\r\n                             value={passState.oldPassword} changeFunction={changeFunction} name='oldPassword'\r\n                             errorMessage={errorMessage}/>\r\n                <CustomInput type='password' placeholder='New password' Icon={LockOutlinedIcon}\r\n                             value={passState.password} changeFunction={changeFunction} name='password'\r\n                             errorMessage={errorMessage}/>\r\n                <div className='modal_button'>\r\n                    <CustomButton type='submit'>Save Changes</CustomButton>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PassContent;","import React, {useState} from 'react';\r\nimport CustomInput from \"../customInput\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport CustomButton from \"../CustomButton\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {validateForm} from \"../../Utils\";\r\n\r\nconst defaultMessage = {name: '', text: ''};\r\n\r\nconst defaultState = {\r\n    cardHolder: 'John Smith',\r\n    expire: new Date().toISOString().split('T')[0],\r\n    cardNumber: '4561 2778 5633 3522',\r\n    cvv: '083',\r\n}\r\n\r\nconst CardContent = () => {\r\n\r\n    const [cardState, setCardState] = useState(defaultState);\r\n    const [errorMessage, setErrorMessage] = useState(defaultMessage);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeFunction = (event) => {\r\n        event.preventDefault();\r\n\r\n        let changedData = {...cardState};\r\n        changedData[event.target.name] = event.target.value;\r\n        setCardState(changedData)\r\n    }\r\n\r\n    const addCreditCard = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm(cardState).name) {\r\n            setErrorMessage(validateForm(cardState));\r\n        } else {\r\n            setErrorMessage(defaultMessage);\r\n            // dispatch(updateUserData({...cardState, birthday: new Date(cardState.birthday).getTime()}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Add Credit Card</h2>\r\n            <form onSubmit={addCreditCard}>\r\n                <CustomInput type='text' label='Card Holder' Icon={AccountCircleOutlinedIcon}\r\n                             value={cardState.cardHolder} changeFunction={changeFunction}\r\n                             name='cardHolder' errorMessage={errorMessage}/>\r\n                <CustomInput type='text' label='Card Number' Icon={CreditCardIcon}\r\n                             changeFunction={changeFunction} value={cardState.cardNumber} name='cardNumber'/>\r\n                <label>\r\n                    <CustomInput type='date' label='Expire Date' Icon={CalendarTodayOutlinedIcon}\r\n                                 value={cardState.expire} changeFunction={changeFunction} name='expire'\r\n                                 errorMessage={errorMessage}/>\r\n                </label>\r\n                <CustomInput type='text' label='CVV' Icon={LockOutlinedIcon}\r\n                             value={cardState.cvv} changeFunction={changeFunction} name='cvv'\r\n                             errorMessage={errorMessage}/>\r\n                <div className='modal_button'>\r\n                    <CustomButton type='submit'>Add card</CustomButton>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CardContent;","import React, {useState} from 'react';\r\nimport {FormControl, FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport CustomButton from \"../CustomButton\";\r\n\r\nconst reminderOptions = [\r\n    {value: 'start', label: 'Start of Month'},\r\n    {value: 'middle', label: 'Middle of Month'},\r\n    {value: 'end', label: 'End of Month'}\r\n]\r\n\r\nconst ReminderContent = () => {\r\n\r\n    const [reminderType, setReminderType] = useState('start');\r\n\r\n    const handleChange = (e) => {\r\n        setReminderType(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: 'left', marginBottom: '10px'}}>Reminder For Donation </h2>\r\n            <div className='modal_content_subtitle'>Choose reminder period for every month</div>\r\n            <FormControl fullWidth margin='normal'>\r\n                <RadioGroup value={reminderType} onChange={handleChange}>\r\n                    {\r\n                        reminderOptions.map(el => (\r\n                            <FormControlLabel value={el.value} control={<Radio/>} label={el.label}/>\r\n                        ))\r\n                    }\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <div className='modal_button' style={{margin: '30px'}}>\r\n                <CustomButton type='submit' radius='4px' customWidth='120px'>Set</CustomButton>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReminderContent;","import React, {useState} from 'react';\r\nimport CustomInput from \"../../../Helpers/components/customInput\";\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport CustomButton from \"../../../Helpers/components/CustomButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {validateForm} from \"../../../Helpers/Utils\";\r\nimport {updateGoalData} from \"../../../redux/Admin/adminMiddlewares\";\r\n\r\nconst defaultMessage = {name: '', text: ''};\r\n\r\nconst GoalTextModal = ({data}) => {\r\n    const [goalData, setGoalData] = useState(data);\r\n    const [errorMessage, setErrorMessage] = useState(defaultMessage);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeFunction = (event) => {\r\n        event.preventDefault();\r\n        let changedData = {...goalData};\r\n        changedData[event.target.name] = event.target.value;\r\n        setGoalData(changedData)\r\n    }\r\n\r\n    const submitChange = (e) => {\r\n        e.preventDefault();\r\n        const changeData = {\r\n            goalId: goalData.id,\r\n            organizationUserId: goalData.organizationUserId,\r\n            data: {\r\n                title: goalData.title,\r\n                description: goalData.description,\r\n                amount: parseFloat(goalData.amount),\r\n            }\r\n        }\r\n        if (validateForm(changeData.data).name) {\r\n            setErrorMessage(validateForm(changeData.data));\r\n        } else {\r\n            setErrorMessage(defaultMessage);\r\n            dispatch(updateGoalData(changeData))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={submitChange}>\r\n                <CustomInput type='text' label='Title' name='title' Icon={TitleIcon}\r\n                             value={goalData.title} id='title'\r\n                             changeFunction={changeFunction} errorMessage={errorMessage}/>\r\n                <CustomInput type='text' label='Description' Icon={DescriptionIcon}\r\n                             value={goalData.description} id='description'\r\n                             changeFunction={changeFunction} name='description' errorMessage={errorMessage}/>\r\n                <CustomInput type='number' label='Amount' Icon={AttachMoneyIcon}\r\n                             value={goalData.amount} id='amount'\r\n                             changeFunction={changeFunction} name='amount' errorMessage={errorMessage}/>\r\n                <div className='modal_button' style={{margin: '30px'}}>\r\n                    <CustomButton type='submit'>Update Goal</CustomButton>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GoalTextModal;","import React, {useEffect, useState} from 'react';\r\nimport './GoalModal.scss';\r\nimport axios from \"axios\";\r\nimport {baseUrl, getToken} from \"../../../Helpers/Constants\";\r\nimport Loading from \"../../../Helpers/components/Loading/Loading\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {triggerChange} from \"../../../redux/Admin/adminActions\";\r\n\r\nconst GoalImageModal = ({data}) => {\r\n    const [secImageData, setSecImageData] = useState([]);\r\n    const [thumbImageData, setThumbImageData] = useState(data.thumbnailImageData || null);\r\n    const [customLoading, setCustomLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const AuthStr = 'Bearer '.concat(getToken());\r\n\r\n    useEffect(() => {\r\n        setCustomLoading(true)\r\n        axios.get(baseUrl + `goals/${data.organizationUserId}/${data.id}/data`, {\r\n            headers: {Authorization: AuthStr}\r\n        }).then(res => {\r\n            setSecImageData(res.data.imagesData);\r\n            setCustomLoading(false)\r\n        })\r\n\r\n        return () => {\r\n            dispatch(triggerChange());\r\n        }\r\n    }, []);\r\n\r\n    const uploadImage = (event, isThumb) => {\r\n        const thumbImage = event.target.files[0]\r\n        const imageData = new FormData();\r\n        imageData.append('image', thumbImage);\r\n        imageData.append('isThumbnail', isThumb);\r\n        setCustomLoading(true)\r\n        axios.post(baseUrl + `goals/${data.organizationUserId}/${data.id}/images`,\r\n            imageData, {headers: {Authorization: AuthStr,}})\r\n            .then(res => {\r\n                isThumb ? setThumbImageData(res.data)\r\n                        : setSecImageData([...secImageData, res.data]);\r\n                setCustomLoading(false)\r\n            })\r\n    }\r\n\r\n    const deleteImage = (publicId, isThumb) => {\r\n        setCustomLoading(true)\r\n        axios.delete(baseUrl + `goals/${data.organizationUserId}/${data.id}/images/${publicId}`,\r\n            {headers: {Authorization: AuthStr}})\r\n            .then(() => {\r\n                 if (isThumb) {\r\n                     setThumbImageData(null)\r\n                 } else {\r\n                     setSecImageData(secImageData.filter(el => el.publicId !== publicId));\r\n                 }\r\n                setCustomLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='goal_image_modal'>\r\n            {customLoading && <Loading/>}\r\n            <div className='thumb_image_container'>\r\n                {\r\n                    thumbImageData ? (\r\n                        <div className='thumb_image_exists'>\r\n                            <img src={thumbImageData.url} alt={data.title}/>\r\n                            <div className='thumb_image_delete_container'\r\n                                 onClick={() => deleteImage(thumbImageData.publicId, true)}>\r\n                                <DeleteForeverIcon/>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <label className='thumb_image_empty'>\r\n                            <div>\r\n                                <AddIcon/>\r\n                            </div>\r\n                            <input type=\"file\" accept=\"image/*\" onChange={event => uploadImage(event, true)}/>\r\n                        </label>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className='sec_image_container'>\r\n                {secImageData.length ?\r\n                    secImageData.filter(image => !image.thumbnail).map(el => (\r\n                        <div className='sec_image_single' key={el.publicId}>\r\n                            <img src={el.url} alt={el.publicId}/>\r\n                            <button onClick={() => deleteImage(el.publicId, false)}>\r\n                                <DeleteForeverIcon/>\r\n                            </button>\r\n                        </div>\r\n                    )) : ''\r\n                }\r\n                <label className='sec_image_add'>\r\n                    <span>+ Add image</span>\r\n                    <input type=\"file\" accept=\"image/*\" onChange={event => uploadImage(event, false)}/>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoalImageModal;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {validateForm} from \"../../../Helpers/Utils\";\r\nimport CustomInput from \"../../../Helpers/components/customInput\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport CustomButton from \"../../../Helpers/components/CustomButton\";\r\nimport {baseUrl, getToken} from \"../../../Helpers/Constants\";\r\nimport axios from \"axios\";\r\nimport {outUser} from \"../../../redux/Admin/adminActions\";\r\nimport Loading from \"../../../Helpers/components/Loading/Loading\";\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport CustomSelect from \"../../../Helpers/components/customSelect\";\r\nimport {addGoal} from \"../../../redux/Admin/adminMiddlewares\";\r\n\r\nconst defaultMessage = {name: '', text: ''};\r\nconst defaultGoalData = {organization: '', title: '', description: '', amount: ''}\r\n\r\nconst GoalAddModal = () => {\r\n\r\n    const [newGoalData, setNewGoalData] = useState(defaultGoalData);\r\n    const [errorMessage, setErrorMessage] = useState(defaultMessage);\r\n    const [organizations, setOrganizations] = useState([]);\r\n    const [customLoading, setCustomLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const token = getToken();\r\n        if (token) {\r\n            setCustomLoading(true)\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.post(baseUrl + 'users',\r\n                {\r\n                    role: \"ORGANIZATION\",\r\n                    blocked: false,\r\n                },{headers: {Authorization: AuthStr}}\r\n            ).then(res => {\r\n                setOrganizations(res.data.items.map(el => { return {id: el.id, value: el.email}}));\r\n                setNewGoalData({...newGoalData, organization: res.data.items[0].id})\r\n                setCustomLoading(false)\r\n            }).catch(error => {\r\n                setCustomLoading(false)\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    },[])\r\n\r\n    const changeFunction = (event) => {\r\n        event.preventDefault();\r\n        let changedData = {...newGoalData};\r\n        changedData[event.target.name] = event.target.value;\r\n        setNewGoalData(changedData)\r\n    }\r\n\r\n    const submitChange = (e) => {\r\n        e.preventDefault();\r\n        const addData = {\r\n            organizationUserId: newGoalData.organization,\r\n            data: {\r\n                title: newGoalData.title,\r\n                description: newGoalData.description,\r\n                amount: parseFloat(newGoalData.amount),\r\n            }\r\n        }\r\n        if (validateForm(addData.data).name) {\r\n            setErrorMessage(validateForm(addData.data));\r\n        } else {\r\n            setErrorMessage(defaultMessage);\r\n            dispatch(addGoal(addData))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {customLoading && <Loading/>}\r\n            <form onSubmit={submitChange}>\r\n                <CustomSelect label='Organization' Icon={ApartmentIcon} options={organizations}\r\n                              value={newGoalData.organization} changeFunction={changeFunction} name='organization'/>\r\n                <CustomInput type='text' label='Title' name='title' Icon={TitleIcon}\r\n                             value={newGoalData.title} id='title'\r\n                             changeFunction={changeFunction} errorMessage={errorMessage}/>\r\n                <CustomInput type='text' label='Description' Icon={DescriptionIcon}\r\n                             value={newGoalData.description} id='description'\r\n                             changeFunction={changeFunction} name='description' errorMessage={errorMessage}/>\r\n                <CustomInput type='number' label='Amount' Icon={AttachMoneyIcon}\r\n                             value={newGoalData.amount} id='amount'\r\n                             changeFunction={changeFunction} name='amount' errorMessage={errorMessage}/>\r\n                <div className='modal_button' style={{margin: '30px'}}>\r\n                    <CustomButton type='submit'>Add Goal</CustomButton>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GoalAddModal;","import React, {useState} from 'react';\r\nimport CustomInput from \"../../../Helpers/components/customInput\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport CustomRadio from \"../../../Helpers/components/customRadio\";\r\nimport WcOutlinedIcon from \"@material-ui/icons/WcOutlined\";\r\nimport CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport CustomSelect from \"../../../Helpers/components/customSelect\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport {baseUrl, countryList, getToken} from \"../../../Helpers/Constants\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {MenuItem, Select} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport CustomButton from \"../../../Helpers/components/CustomButton\";\r\nimport {validateForm} from \"../../../Helpers/Utils\";\r\nimport axios from \"axios\";\r\nimport {setLoading} from \"../../../redux/loadingActions\";\r\nimport {outUser, triggerChange} from \"../../../redux/Admin/adminActions\";\r\nimport {closeEditModal} from \"../../../redux/User/userActions\";\r\n\r\nconst defaultData = {\r\n    fullName: '',\r\n    gender: 'MALE',\r\n    birthday: new Date().toISOString().split('T')[0],\r\n    country: 'Armenia',\r\n    email: '',\r\n    password: '',\r\n    conf_password: '',\r\n};\r\n\r\nconst defaultMessage = {name: '', text: ''};\r\n\r\nconst UserAddModal = ({data}) => {\r\n\r\n    const [userData, setUserData] = useState(defaultData);\r\n    const [errorMessage, setErrorMessage] = useState(defaultMessage);\r\n    const [role, setRole] = useState('USER');\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const changeFunction = (event) => {\r\n        let changeData = {...userData};\r\n        let value = event.target.value;\r\n        if (event.target.name === 'birthday' && new Date(value) > new Date()) {\r\n            value = new Date().toISOString().split('T')[0]\r\n        }\r\n        changeData[event.target.name] = value;\r\n        setUserData(changeData)\r\n        errorMessage && setErrorMessage(defaultMessage);\r\n    }\r\n\r\n    const changeRole = (value) => {\r\n        setUserData(defaultData);\r\n        setRole(value)\r\n    }\r\n\r\n    const addUser = (event) => {\r\n        event.preventDefault();\r\n        let {fullName, gender, birthday, country, email, password, conf_password} = userData;\r\n        let data = {\r\n            fullName,\r\n            gender,\r\n            birthday: new Date(birthday).getTime(),\r\n            country\r\n        };\r\n        if (role === 'ORGANIZATION') {\r\n            data = { fullName }\r\n        } else if (role === 'ADMIN') { data = {} }\r\n\r\n        const pushData = {\r\n            email,\r\n            role,\r\n            data,\r\n            password\r\n        };\r\n        const token = getToken();\r\n        if (token) {\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            if (validateForm({email, ...data, password, conf_password}).name) {\r\n                setErrorMessage(validateForm({email, ...data, password, conf_password}));\r\n            } else {\r\n                setErrorMessage(defaultMessage);\r\n                axios.post(baseUrl + `users/${role}`, pushData, {headers: {Authorization: AuthStr}}).then(() => {\r\n                    dispatch(triggerChange());\r\n                    dispatch(closeEditModal(false))\r\n                }).catch(error => {\r\n                    const message = error.response.data.message;\r\n                    if (message.toLowerCase().includes('email')) {\r\n                        setErrorMessage({name: 'email', text: message});\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n\r\n    const createFieldList = () => {\r\n        let fields =  (\r\n                <>\r\n                    <CustomInput type='text' label='Full name' Icon={AccountCircleOutlinedIcon} value={userData.name}\r\n                                 changeFunction={changeFunction} name='fullName' id='fullName' errorMessage={errorMessage}/>\r\n                    <CustomRadio options={[{value: 'MALE', 'label': 'Male'}, {value: 'FEMALE', 'label': 'Female'}]}\r\n                                 Icon={WcOutlinedIcon} label='Gender' value={userData.gender}\r\n                                 changeFunction={changeFunction} name='gender' id='gender'/>\r\n                    <label>\r\n                        <CustomInput type='date' label='Birthdate' Icon={CalendarTodayOutlinedIcon}\r\n                                     value={userData.birthday} changeFunction={changeFunction} name='birthday' id='birthday'\r\n                                     errorMessage={errorMessage}/>\r\n                    </label>\r\n                    <CustomSelect label='Country' Icon={PublicIcon} options={countryList}\r\n                                  value={userData.country} changeFunction={changeFunction} name='country' id='country'/>\r\n                </>\r\n            );\r\n        if (role === 'ORGANIZATION') {\r\n            fields = (\r\n                <CustomInput type='text' label='Full name' Icon={AccountCircleOutlinedIcon} value={userData.name}\r\n                             changeFunction={changeFunction} name='fullName' id='fullName' errorMessage={errorMessage}/>\r\n            )\r\n        } else if (role === 'ADMIN') {\r\n            fields = ''\r\n        }\r\n        return fields\r\n    }\r\n\r\n    const dataFields = createFieldList()\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                value={role}\r\n                onChange={event => changeRole(event.target.value)}\r\n            >\r\n                {\r\n                    data.roles.map(el => (\r\n                        <MenuItem value={el.value} key={el.value}>{el.label}</MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <form onSubmit={addUser}>\r\n                <CustomInput type='text' label='Email' Icon={MailOutlineIcon}\r\n                             value={userData.email} changeFunction={changeFunction} name='email' id='email'\r\n                             errorMessage={errorMessage}/>\r\n                {dataFields}\r\n                <CustomInput type='password' label='Password' Icon={LockOutlinedIcon}\r\n                             value={userData.password} changeFunction={changeFunction} name='password' id='password'\r\n                             errorMessage={errorMessage}/>\r\n                <CustomInput type='password' label='Confirm Password' Icon={LockOutlinedIcon}\r\n                             value={userData.conf_password} changeFunction={changeFunction} name='conf_password' id='conf_password'\r\n                             errorMessage={errorMessage}/>\r\n                <div className='modal_button' style={{margin: '30px'}}>\r\n                    <CustomButton type='submit'>Create</CustomButton>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserAddModal;","import React, {useEffect, useRef, useState} from 'react';\r\nimport './ModalContainer.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {closeEditModal} from \"../../../redux/User/userActions\";\r\nimport InfoContent from \"./InfoContent\";\r\nimport PassContent from \"./PassContent\";\r\nimport CardContent from \"./CardContent\";\r\nimport ReminderContent from \"./ReminderContent\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport GoalTextModal from \"../../../Admin/Goals/GoalModal/GoalTextModal\";\r\nimport GoalImageModal from \"../../../Admin/Goals/GoalModal/GoalImageModal\";\r\nimport GoalAddModal from \"../../../Admin/Goals/GoalModal/GoalAddModal\";\r\nimport UserAddModal from \"../../../Admin/Users/UserModal/UserAddModal\";\r\n\r\nconst ModalContainer = ({type: editData}) => {\r\n\r\n    const [openClass, setOpenClass] = useState('');\r\n    const { loading } = useSelector(state => state.loading);\r\n    const dispatch = useDispatch();\r\n    const modalRef = useRef(null);\r\n    const modalContentRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setOpenClass('open');\r\n        }, 0)\r\n\r\n        return () => {\r\n            setOpenClass('');\r\n        }\r\n    }, [])\r\n\r\n    const closeModal = () => {\r\n        dispatch(closeEditModal())\r\n    }\r\n\r\n    const getComponent = (type) => {\r\n        const components = {\r\n            info: <InfoContent/>,\r\n            pass: <PassContent/>,\r\n            card: <CardContent/>,\r\n            reminder: <ReminderContent/>\r\n        }\r\n        return components[type]\r\n    }\r\n\r\n    const getComponentWIthData = (editData) => {\r\n        const components = {\r\n            goalTextEdit: <GoalTextModal data={editData.data}/>,\r\n            goalAdd: <GoalAddModal/>,\r\n            goalImageEdit: <GoalImageModal data={editData.data}/>,\r\n            userAdd: <UserAddModal data={editData.data}/>,\r\n        }\r\n        return components[editData.type]\r\n    }\r\n\r\n    let content = '';\r\n    if (editData.data) {\r\n        content = getComponentWIthData(editData);\r\n    } else {\r\n        content = getComponent(editData);\r\n    }\r\n\r\n    return (\r\n        <div className='modal_container' ref={modalRef} onClick={closeModal}>\r\n            { loading && <Loading/> }\r\n            <div className={`modal_content ${openClass}`} ref={modalContentRef}\r\n                 onClick={event => event.stopPropagation()}>\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalContainer;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'ExitToApp');\n\nexports.default = _default;","import {emailRegex, passwordRegex} from \"./Constants\";\r\nimport moment from 'moment';\r\n\r\nexport const validateForm = (data) => {\r\n    let invalidName = {name: '', text: ''};\r\n\r\n    for (let key in data) {\r\n        if (!data[key].toString().trim()) {\r\n            invalidName = {name: key, text: 'Please fill out this field.'}\r\n            break\r\n        }\r\n        if (key === 'conf_password' && data[key] !== data.password) {\r\n            invalidName = {name: key, text: 'Password mismatch.'}\r\n            break\r\n        }\r\n        if (key === 'password' && !passwordRegex.test(data[key]) && data.email !== 'fndrisr@gmail.com') {\r\n            invalidName = {name: key, text: 'Password must contain at least` 6 characters, uppercase, lowercase, digit, symbol'}\r\n            break\r\n        }\r\n        if (key === 'oldPassword' && data[key] === data.password) {\r\n            invalidName = {name: key, text: 'Old and new passwords should differ'}\r\n            break\r\n        }\r\n        if (key === 'email' && !emailRegex.test(data[key])) {\r\n            invalidName = {name: key, text: 'Please enter a valid email address.'}\r\n            break\r\n        }\r\n    }\r\n    return invalidName\r\n}\r\n\r\nexport const buildChartData = (data, sortBy, label) => {\r\n    const defData = [\r\n        {\r\n            \"id\": \"chartData\",\r\n            \"color\": \"hsl(207, 70%, 50%)\",\r\n            \"data\": [\r\n                {\r\n                    \"x\": \"2021-02-08\",\r\n                    \"y\": 23,\r\n                    \"count\": 123\r\n                },\r\n            ]\r\n        }\r\n    ]\r\n    defData[0].data = data.map(el => {\r\n        const y = el[sortBy] || 1;\r\n        return {x: moment(el.date).format('YYYY-MM-DD'), y, label}\r\n    })\r\n    return defData\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React from 'react';\r\nimport './cunstomInputs.scss';\r\n\r\nconst defaultStyles = {\r\n    border: 'none',\r\n    borderRadius: '30px',\r\n    backgroundColor: '#a1d0cf',\r\n    color: '#fff',\r\n    padding: '10px 30px',\r\n    width: 'auto',\r\n    height: 'auto'\r\n}\r\n\r\nconst CustomButton = ({children, style, type, onClick, radius, customHeight, customWidth, customPadding, icon: Icon}) => {\r\n    const borderRadius = radius || defaultStyles.borderRadius;\r\n    const width = customWidth || defaultStyles.width;\r\n    const height = customHeight || defaultStyles.height;\r\n    const padding = customPadding || defaultStyles.padding;\r\n    const secClass = style || '';\r\n\r\n    return (\r\n        <button className={`custom_button ${secClass}`} type={type} onClick={onClick}\r\n                style={{borderRadius, width, height, padding }}>\r\n            { Icon && <Icon/>}\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CustomButton;","import React, {useState} from 'react';\r\nimport './cunstomInputs.scss';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nconst CustomInput = ({\r\n                         type,\r\n                         placeholder = '',\r\n                         id,\r\n                         Icon,\r\n                         name,\r\n                         changeFunction,\r\n                         errorMessage,\r\n                         value,\r\n                         readOnly,\r\n                         suffixData,\r\n                         label\r\n                     }) => {\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    let isWrong = errorMessage && errorMessage.name === name;\r\n\r\n    let inputProps = {\r\n        type: type === 'password' ? showPassword ? 'text' : 'password' : type,\r\n        placeholder: placeholder,\r\n        id: id || '',\r\n        name: name,\r\n        value: value,\r\n        readOnly: readOnly,\r\n        onChange: changeFunction,\r\n    };\r\n\r\n    if (type === 'password') {\r\n        inputProps.autoComplete = 'current-password'\r\n    }\r\n    if (type === 'date') {\r\n        inputProps.max = new Date().toISOString().split(\"T\")[0]\r\n        inputProps.min = '1900-01-01'\r\n    }\r\n\r\n    const suffixContent = () => {\r\n        if (suffixData && suffixData.icon) {\r\n            const SuffixIcon = suffixData.icon;\r\n            const clickFunction = suffixData.clickFunction || (() => {\r\n            })\r\n            return (\r\n                <div className='custom_input_suffix'>\r\n                    <SuffixIcon onClick={clickFunction}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if (type === 'password') {\r\n                return (\r\n                    <div className='custom_input_suffix'>\r\n                        {\r\n                            showPassword ?\r\n                                <VisibilityIcon onClick={() => setShowPassword(false)}/>\r\n                                :\r\n                                <VisibilityOffIcon onClick={() => setShowPassword(true)}/>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`custom_input ${isWrong && 'invalid_input'}`}>\r\n            {label && <div className='custom_label'>{label}</div>}\r\n            {Icon && <div className='custom_input_prefix'><Icon/></div>}\r\n            <input {...inputProps}/>\r\n            {suffixContent()}\r\n            {\r\n                isWrong && errorMessage.text && <span className='invalid_input_message'>{errorMessage.text}</span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomInput;","import React from 'react';\r\nimport './Profile.scss';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport CustomInput from \"../../Helpers/components/customInput\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport CustomSelect from \"../../Helpers/components/customSelect\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomButton from \"../../Helpers/components/CustomButton\";\r\nimport ModalContainer from \"../../Helpers/components/ModalContainer/ModalContainer\";\r\nimport {openEditModal, deleteCreditCard, outUser} from \"../../redux/User/userActions\";\r\nimport {countryList} from \"../../Helpers/Constants\";\r\nimport Loading from \"../../Helpers/components/Loading/Loading\";\r\n\r\nconst Profile = () => {\r\n\r\n    const {userData, editModal, creditCards} = useSelector(state => state.user);\r\n    const { loading } = useSelector(state => state.loading);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const birthday = userData.data.birthday && new Date(userData.data.birthday).toISOString().split('T')[0];\r\n\r\n    const removeCreditCard = (id) => {\r\n        let deleteIndex = creditCards.findIndex((el) => el.id === id);\r\n        dispatch(deleteCreditCard(deleteIndex))\r\n    }\r\n\r\n    return (\r\n        <div className='profile_container'>\r\n            { editModal && <ModalContainer type={editModal}/> }\r\n            { loading && <Loading/> }\r\n            <div className='profile_header'>\r\n                <h2>My Profile</h2>\r\n                <button onClick={() => dispatch(outUser())}>\r\n                    SIGN OUT\r\n                    <ExitToAppIcon/>\r\n                </button>\r\n            </div>\r\n            {\r\n                userData.id && (\r\n                    <div className='profile_user_info'>\r\n                        <div className='profile_edit'>\r\n                            <CustomButton onClick={() => dispatch(openEditModal('info'))}>\r\n                                Edit profile\r\n                                <EditIcon/>\r\n                            </CustomButton>\r\n                        </div>\r\n                        <CustomInput type='text' Icon={AccountCircleOutlinedIcon}\r\n                                     value={userData.data.fullName} label='Full Name'\r\n                                     name='fullName' readOnly={true}/>\r\n                        <label>\r\n                            <CustomInput type='date' Icon={CalendarTodayOutlinedIcon}\r\n                                         value={birthday} name='birthday' label='Birthday'\r\n                                         readOnly={true}/>\r\n                        </label>\r\n                        <CustomSelect Icon={PublicIcon} label='Country' options={countryList}\r\n                                      value={userData.data.country} name='country' disabled={true}/>\r\n                        <CustomInput type='text' Icon={MailOutlineIcon}\r\n                                     value={userData.email} name='email' label='Email'\r\n                                     readOnly={true}/>\r\n                    </div>\r\n                )\r\n            }\r\n            <div className='profile_change_button'>\r\n                <CustomButton onClick={() => dispatch(openEditModal('pass'))}>Change Password</CustomButton>\r\n            </div>\r\n            {/*<div className='profile_payment_container'>*/}\r\n            {/*    <div className='profile_payment_header'>*/}\r\n            {/*        <div>Payment details</div>*/}\r\n            {/*    </div>*/}\r\n            {/*    <div className='profile_payment_list'>*/}\r\n            {/*        {*/}\r\n            {/*            creditCards.map(el => (*/}\r\n            {/*                <CustomInput type='text' placeholder='Card Number' Icon={CreditCardIcon}*/}\r\n            {/*                             value={el.value} name='card' readOnly={true}*/}\r\n            {/*                             key={el.id} suffixData={{icon: DeleteOutlineIcon, clickFunction: () => removeCreditCard(el.id)}}/>*/}\r\n            {/*            ))*/}\r\n            {/*        }*/}\r\n            {/*    </div>*/}\r\n            {/*    <div className='profile_change_button'>*/}\r\n            {/*        <CustomButton onClick={() => dispatch(openEditModal('card'))}>Add credit card</CustomButton>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {MenuItem, Select} from \"@material-ui/core\";\r\nimport './cunstomInputs.scss';\r\n\r\nconst CustomSelect = ({Icon, name, changeFunction, value, options, label, disabled}) => {\r\n    return (\r\n        <div className='custom_select'>\r\n            { label && <div className='custom_label'>{label}</div> }\r\n            {Icon && <div className='custom_select_prefix'><Icon/></div>}\r\n            <Select\r\n                value={value}\r\n                onChange={changeFunction}\r\n                displayEmpty\r\n                className={`custom_select_comp ${disabled ? 'disabled' : ''}`}\r\n                inputProps={{'aria-label': 'Without label', 'name': name}}\r\n            >\r\n                {\r\n                    options.map(el => {\r\n                        return (\r\n                            <MenuItem value={el.id || el} key={el.id || el}>{el.value || el}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomSelect;","import axios from \"axios\";\r\nimport qs from 'qs';\r\nimport {baseUrl, getToken} from \"../../Helpers/Constants\";\r\nimport {\r\n    setGoals,\r\n    outUser, triggerChange, setUsers, setDonations\r\n} from \"./adminActions\";\r\nimport {setLoading} from \"../loadingActions\";\r\nimport {closeEditModal} from \"../User/userActions\";\r\n\r\nexport const getTableGoals = (instructions) => {\r\n    return dispatch => {\r\n        const token = getToken();\r\n        if (token) {\r\n            dispatch(setLoading(true))\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.post(baseUrl + 'goals',\r\n                instructions, {headers: {Authorization: AuthStr}}\r\n            ).then(res => {\r\n                dispatch(setGoals(res.data))\r\n                dispatch(setLoading(false))\r\n            }).catch(error => {\r\n                dispatch(setLoading(false))\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateGoalActiveness = (ids, active) => {\r\n    return dispatch => {\r\n        const token = getToken();\r\n        if (token) {\r\n            dispatch(setLoading(true))\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.put(baseUrl + 'goals', '', {\r\n                params: {ids, active},\r\n                paramsSerializer: function (params) {\r\n                    return qs.stringify(params, {arrayFormat: 'repeat'})\r\n                },\r\n                headers: {Authorization: AuthStr}\r\n            }).then(() => {\r\n                dispatch(triggerChange());\r\n                dispatch(setLoading(false))\r\n            }).catch(error => {\r\n                dispatch(setLoading(false))\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserActiveness = (ids, block, role) => {\r\n    return dispatch => {\r\n        const token = getToken();\r\n        if (token) {\r\n            dispatch(setLoading(true))\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.put(baseUrl + `users/ADMIN/block`, '', {\r\n                params: {ids, block},\r\n                paramsSerializer: function (params) {\r\n                    return qs.stringify(params, {arrayFormat: 'repeat'})\r\n                },\r\n                headers: {Authorization: AuthStr}\r\n            }).then(() => {\r\n                dispatch(triggerChange());\r\n                dispatch(setLoading(false))\r\n            }).catch(error => {\r\n                dispatch(setLoading(false))\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateGoalData = (goalData) => {\r\n    return dispatch => {\r\n        const token = getToken();\r\n        if (token) {\r\n            dispatch(setLoading(true))\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.put(baseUrl + `goals/${goalData.organizationUserId}/${goalData.goalId}`,\r\n                goalData.data,\r\n                {\r\n                    headers: {Authorization: AuthStr}\r\n                }).then(res => {\r\n                dispatch(triggerChange());\r\n                dispatch(closeEditModal(false))\r\n                dispatch(setLoading(false))\r\n            }).catch(error => {\r\n                dispatch(setLoading(false))\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n}\r\n\r\nexport const addGoal = (goalData) => {\r\n    return dispatch => {\r\n        const token = getToken();\r\n        if (token) {\r\n            dispatch(setLoading(true))\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.post(baseUrl + `goals/${goalData.organizationUserId}`,\r\n                goalData.data, {headers: {Authorization: AuthStr}})\r\n                .then(() => {\r\n                    dispatch(triggerChange());\r\n                    dispatch(closeEditModal(false))\r\n                    dispatch(setLoading(false))\r\n                }).catch(error => {\r\n                    dispatch(setLoading(false))\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTableUsers = (instructions) => {\r\n    return dispatch => {\r\n        const token = getToken();\r\n        if (token) {\r\n            dispatch(setLoading(true))\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.post(baseUrl + 'users',\r\n                instructions, {headers: {Authorization: AuthStr}}\r\n            ).then(res => {\r\n                dispatch(setUsers(res.data))\r\n                dispatch(setLoading(false))\r\n            }).catch(error => {\r\n                dispatch(setLoading(false))\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n}\r\nexport const getTableDonations = (instructions) => {\r\n    return dispatch => {\r\n        const token = getToken();\r\n        if (token) {\r\n            dispatch(setLoading(true))\r\n            const AuthStr = 'Bearer '.concat(token);\r\n            axios.post(baseUrl + 'donations',\r\n                instructions, {headers: {Authorization: AuthStr}}\r\n            ).then(res => {\r\n                dispatch(setDonations(res.data))\r\n                dispatch(setLoading(false))\r\n            }).catch(error => {\r\n                dispatch(setLoading(false))\r\n                if (error && error.response && error.response.status === 401) {\r\n                    dispatch(outUser())\r\n                }\r\n            })\r\n        } else {\r\n            dispatch(outUser())\r\n        }\r\n    }\r\n}"],"sourceRoot":""}