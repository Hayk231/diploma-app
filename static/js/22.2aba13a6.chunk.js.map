{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","Auth/Login/Login.js","Helpers/Utils.js","Helpers/components/customInput.js"],"names":["useFormControl","React","FormControlContext","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","defaultLoginData","email","password","defaultMessage","Login","location","useState","userLoginState","setUserLoginState","remember","setRemember","errorMessage","setErrorMessage","loading","useSelector","state","dispatch","useDispatch","history","useHistory","changeFunction","event","changeData","target","value","className","onSubmit","preventDefault","validateForm","deviceToken","getDeviceToken","setLoading","axios","post","baseUrl","then","res","storage","localStorage","sessionStorage","setItem","data","token","role","from","replace","push","catch","error","errorData","response","status","autoComplete","placeholder","Icon","MailOutlineIcon","LockOutlinedIcon","to","control","onChange","e","label","invalidName","key","toString","trim","passwordRegex","test","emailRegex","buildChartData","sortBy","defData","map","el","y","x","moment","date","format","CustomInput","id","readOnly","suffixData","showPassword","setShowPassword","isWrong","max","Date","toISOString","split","min","SuffixIcon","clickFunction","onClick","suffixContent"],"mappings":"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","file":"static/js/22.2aba13a6.chunk.js","sourcesContent":["import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, {useState} from 'react';\r\nimport './Login.scss';\r\nimport CustomInput from \"../../Helpers/components/customInput\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\n// import googleIcon from \"./images/google.png\";\r\n// import fbIcon from \"./images/fb.png\";\r\n// import twitterIcon from \"./images/twitter.png\";\r\nimport {validateForm} from \"../../Helpers/Utils\";\r\nimport axios from \"axios\";\r\nimport {baseUrl, getDeviceToken} from \"../../Helpers/Constants\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setLoading} from \"../../redux/loadingActions\";\r\nimport Loading from \"../../Helpers/components/Loading/Loading\";\r\n\r\nconst defaultLoginData = {\r\n    email: '',\r\n    password: '',\r\n}\r\n\r\nconst defaultMessage = {name: '', text: ''};\r\n\r\nconst Login = ({ location }) => {\r\n    const [userLoginState, setUserLoginState] = useState(defaultLoginData);\r\n    const [remember, setRemember] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(defaultMessage);\r\n    const { loading } = useSelector(state => state.loading);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const changeFunction = (event) => {\r\n        let changeData = {...userLoginState};\r\n        changeData[event.target.name] = event.target.value;\r\n        setUserLoginState(changeData)\r\n        errorMessage && setErrorMessage(defaultMessage);\r\n    }\r\n\r\n    const submitLogin = (event) => {\r\n        event.preventDefault();\r\n        if (validateForm(userLoginState).name) {\r\n            setErrorMessage(validateForm(userLoginState));\r\n        } else {\r\n            setErrorMessage(defaultMessage);\r\n            const {email, password} = userLoginState;\r\n            const deviceToken = getDeviceToken();\r\n            dispatch(setLoading(true));\r\n            axios.post(baseUrl + 'login', {\r\n                email,\r\n                password,\r\n                deviceToken\r\n            }).then(res => {\r\n                dispatch(setLoading(false));\r\n                let storage = remember ? localStorage : sessionStorage;\r\n                storage.setItem('auth_token', res.data.token);\r\n                storage.setItem('role', res.data.role);\r\n                if (location.state && location.state.from && res.data.role === location.state.role) {\r\n                    history.replace(location.state.from);\r\n                } else {\r\n                    history.push('/')\r\n                }\r\n            }).catch(error => {\r\n                dispatch(setLoading(false));\r\n                const errorData = error.response.data;\r\n                if (errorData.error === 'Unauthorized') {\r\n                    setErrorMessage({name: 'password', text: 'Wrong credentials'});\r\n                } else if (errorData.status === 403) {\r\n                    setErrorMessage({name: 'email', text: 'Email is not confirmed'});\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='auth_login_card'>\r\n            <form onSubmit={submitLogin} autoComplete=\"on\" >\r\n                { loading && <Loading/> }\r\n                <h1>Sign in</h1>\r\n                <CustomInput type='text' placeholder='Email' Icon={MailOutlineIcon} value={userLoginState.name}\r\n                             changeFunction={changeFunction} name='email' errorMessage={errorMessage}/>\r\n                <CustomInput type='password' placeholder='Password' Icon={LockOutlinedIcon} value={userLoginState.name}\r\n                             changeFunction={changeFunction} name='password' errorMessage={errorMessage}/>\r\n                <div className='auth_login_forgot'>\r\n                    <Link to='/auth/reset'>\r\n                        Forgot password?\r\n                    </Link>\r\n                </div>\r\n                <div className='auth_login_remember'>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={remember}\r\n                                onChange={(e) => setRemember(e.target.checked)}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remember me\"\r\n                    />\r\n                </div>\r\n                <div className='auth_login_button'>\r\n                    <button type=\"submit\">Sign in</button>\r\n                    {/*<input type=\"submit\" value='Sign in'/>*/}\r\n                </div>\r\n                {/*<div className='auth_login_social'>*/}\r\n                {/*    <div className='auth_login_social_label'>*/}\r\n                {/*        <span>or sign in with</span>*/}\r\n                {/*    </div>*/}\r\n                {/*    <div className='auth_login_social_icons'>*/}\r\n                {/*        <img src={googleIcon} alt='googleIcon'/>*/}\r\n                {/*        <img src={fbIcon} alt='fbIcon'/>*/}\r\n                {/*        <img src={twitterIcon} alt='twitterIcon'/>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n                <div className='auth_login_bottom_cont'>\r\n                    Don’t have an account?\r\n                    <Link to='/auth/signup'>Sign up</Link>\r\n                </div>\r\n            </form>\r\n            <div className='auth_login_card_img'> </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import {emailRegex, passwordRegex} from \"./Constants\";\r\nimport moment from 'moment';\r\n\r\nexport const validateForm = (data) => {\r\n    let invalidName = {name: '', text: ''};\r\n\r\n    for (let key in data) {\r\n        if (!data[key].toString().trim()) {\r\n            invalidName = {name: key, text: 'Please fill out this field.'}\r\n            break\r\n        }\r\n        if (key === 'conf_password' && data[key] !== data.password) {\r\n            invalidName = {name: key, text: 'Password mismatch.'}\r\n            break\r\n        }\r\n        if (key === 'password' && !passwordRegex.test(data[key]) && data.email !== 'fndrisr@gmail.com') {\r\n            invalidName = {name: key, text: 'Password must contain at least` 6 characters, uppercase, lowercase, digit, symbol'}\r\n            break\r\n        }\r\n        if (key === 'oldPassword' && data[key] === data.password) {\r\n            invalidName = {name: key, text: 'Old and new passwords should differ'}\r\n            break\r\n        }\r\n        if (key === 'email' && !emailRegex.test(data[key])) {\r\n            invalidName = {name: key, text: 'Please enter a valid email address.'}\r\n            break\r\n        }\r\n    }\r\n    return invalidName\r\n}\r\n\r\nexport const buildChartData = (data, sortBy, label) => {\r\n    const defData = [\r\n        {\r\n            \"id\": \"chartData\",\r\n            \"color\": \"hsl(207, 70%, 50%)\",\r\n            \"data\": [\r\n                {\r\n                    \"x\": \"2021-02-08\",\r\n                    \"y\": 23,\r\n                    \"count\": 123\r\n                },\r\n            ]\r\n        }\r\n    ]\r\n    defData[0].data = data.map(el => {\r\n        const y = el[sortBy] || 1;\r\n        return {x: moment(el.date).format('YYYY-MM-DD'), y, label}\r\n    })\r\n    return defData\r\n}","import React, {useState} from 'react';\r\nimport './cunstomInputs.scss';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nconst CustomInput = ({\r\n                         type,\r\n                         placeholder = '',\r\n                         id,\r\n                         Icon,\r\n                         name,\r\n                         changeFunction,\r\n                         errorMessage,\r\n                         value,\r\n                         readOnly,\r\n                         suffixData,\r\n                         label\r\n                     }) => {\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    let isWrong = errorMessage && errorMessage.name === name;\r\n\r\n    let inputProps = {\r\n        type: type === 'password' ? showPassword ? 'text' : 'password' : type,\r\n        placeholder: placeholder,\r\n        id: id || '',\r\n        name: name,\r\n        value: value,\r\n        readOnly: readOnly,\r\n        onChange: changeFunction,\r\n    };\r\n\r\n    if (type === 'password') {\r\n        inputProps.autoComplete = 'current-password'\r\n    }\r\n    if (type === 'date') {\r\n        inputProps.max = new Date().toISOString().split(\"T\")[0]\r\n        inputProps.min = '1900-01-01'\r\n    }\r\n\r\n    const suffixContent = () => {\r\n        if (suffixData && suffixData.icon) {\r\n            const SuffixIcon = suffixData.icon;\r\n            const clickFunction = suffixData.clickFunction || (() => {\r\n            })\r\n            return (\r\n                <div className='custom_input_suffix'>\r\n                    <SuffixIcon onClick={clickFunction}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            if (type === 'password') {\r\n                return (\r\n                    <div className='custom_input_suffix'>\r\n                        {\r\n                            showPassword ?\r\n                                <VisibilityIcon onClick={() => setShowPassword(false)}/>\r\n                                :\r\n                                <VisibilityOffIcon onClick={() => setShowPassword(true)}/>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`custom_input ${isWrong && 'invalid_input'}`}>\r\n            {label && <div className='custom_label'>{label}</div>}\r\n            {Icon && <div className='custom_input_prefix'><Icon/></div>}\r\n            <input {...inputProps}/>\r\n            {suffixContent()}\r\n            {\r\n                isWrong && errorMessage.text && <span className='invalid_input_message'>{errorMessage.text}</span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomInput;"],"sourceRoot":""}